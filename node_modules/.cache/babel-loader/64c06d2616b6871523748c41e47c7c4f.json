{"ast":null,"code":"var _jsxFileName = \"/home/pot/project/web-service/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactFlow, { removeElements, addEdge, MiniMap, Controls, Background } from 'react-flow-renderer';\nimport initialElements from './initial-elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onLoad = reactFlowInstance => {\n  console.log('flow loaded:', reactFlowInstance);\n  reactFlowInstance.fitView();\n};\n\nconst App = () => {\n  _s();\n\n  const [elements, setElements] = useState(initialElements);\n\n  const onElementsRemove = elementsToRemove => setElements(els => removeElements(elementsToRemove, els));\n\n  const onConnect = params => setElements(els => addEdge(params, els));\n\n  return /*#__PURE__*/_jsxDEV(ReactFlow, {\n    elements: elements,\n    onElementsRemove: onElementsRemove,\n    onConnect: onConnect,\n    onLoad: onLoad,\n    snapToGrid: true,\n    snapGrid: [15, 15],\n    children: [/*#__PURE__*/_jsxDEV(MiniMap, {\n      nodeStrokeColor: n => {\n        var _n$style;\n\n        if ((_n$style = n.style) === null || _n$style === void 0 ? void 0 : _n$style.background) return n.style.background;\n        if (n.type === 'input') return '#0041d0';\n        if (n.type === 'output') return '#ff0072';\n        if (n.type === 'default') return '#1a192b';\n        return '#eee';\n      },\n      nodeColor: n => {\n        var _n$style2;\n\n        if ((_n$style2 = n.style) === null || _n$style2 === void 0 ? void 0 : _n$style2.background) return n.style.background;\n        return '#fff';\n      },\n      nodeBorderRadius: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Background, {\n      color: \"#aaa\",\n      gap: 16\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2AKLtE/cU4ESCqJy1IrkhE3P+V8=\");\n\n_c = App;\nexport default App; // const elements = [\n//   {\n//     id: '1',\n//     type: 'input',\n//     data: { label: 'Upload' },\n//     position: { x: 250, y: 25 },\n//   },\n//   // default node\n//   {\n//     id: '2',\n//     // you can also pass a React component as a label\n//     data: { label: <div>Default Node</div> },\n//     position: { x: 100, y: 125 },\n//   },\n//   {\n//     id: '3',\n//     type: 'output', // output node\n//     data: { label: 'Output Node' },\n//     position: { x: 250, y: 250 },\n//   },\n//   // animated edge\n//   { id: 'e1-2', source: '1', target: '2', animated: true },\n//   { id: 'e2-3', source: '2', target: '3' },\n// ];\n// function App() {\n//   return (\n//     <div style={{ height: 1000 }}>\n//         <ReactFlow elements={elements} />\n//     </div>\n//   );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pot/project/web-service/src/App.js"],"names":["React","useState","ReactFlow","removeElements","addEdge","MiniMap","Controls","Background","initialElements","onLoad","reactFlowInstance","console","log","fitView","App","elements","setElements","onElementsRemove","elementsToRemove","els","onConnect","params","n","style","background","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,IACEC,cADF,EAEEC,OAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEC,UALF,QAMO,qBANP;AAQA,OAAOC,eAAP,MAA4B,oBAA5B;;;AAGA,MAAMC,MAAM,GAAIC,iBAAD,IAAuB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,iBAA5B;AACAA,EAAAA,iBAAiB,CAACG,OAAlB;AACD,CAHD;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACO,eAAD,CAAxC;;AACA,QAAMS,gBAAgB,GAAIC,gBAAD,IACvBF,WAAW,CAAEG,GAAD,IAAShB,cAAc,CAACe,gBAAD,EAAmBC,GAAnB,CAAxB,CADb;;AAEA,QAAMC,SAAS,GAAIC,MAAD,IAAYL,WAAW,CAAEG,GAAD,IAASf,OAAO,CAACiB,MAAD,EAASF,GAAT,CAAjB,CAAzC;;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,gBAAgB,EAAEE,gBAFpB;AAGE,IAAA,SAAS,EAAEG,SAHb;AAIE,IAAA,MAAM,EAAEX,MAJV;AAKE,IAAA,UAAU,EAAE,IALd;AAME,IAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CANZ;AAAA,4BAQE,QAAC,OAAD;AACE,MAAA,eAAe,EAAGa,CAAD,IAAO;AAAA;;AACtB,wBAAIA,CAAC,CAACC,KAAN,6CAAI,SAASC,UAAb,EAAyB,OAAOF,CAAC,CAACC,KAAF,CAAQC,UAAf;AACzB,YAAIF,CAAC,CAACG,IAAF,KAAW,OAAf,EAAwB,OAAO,SAAP;AACxB,YAAIH,CAAC,CAACG,IAAF,KAAW,QAAf,EAAyB,OAAO,SAAP;AACzB,YAAIH,CAAC,CAACG,IAAF,KAAW,SAAf,EAA0B,OAAO,SAAP;AAE1B,eAAO,MAAP;AACD,OARH;AASE,MAAA,SAAS,EAAGH,CAAD,IAAO;AAAA;;AAChB,yBAAIA,CAAC,CAACC,KAAN,8CAAI,UAASC,UAAb,EAAyB,OAAOF,CAAC,CAACC,KAAF,CAAQC,UAAf;AAEzB,eAAO,MAAP;AACD,OAbH;AAcE,MAAA,gBAAgB,EAAE;AAdpB;AAAA;AAAA;AAAA;AAAA,YARF,eAwBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAxBF,eAyBE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,MAAlB;AAAyB,MAAA,GAAG,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAnCD;;GAAMV,G;;KAAAA,G;AAqCN,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, {\n  removeElements,\n  addEdge,\n  MiniMap,\n  Controls,\n  Background,\n} from 'react-flow-renderer';\n\nimport initialElements from './initial-elements';\n\n\nconst onLoad = (reactFlowInstance) => {\n  console.log('flow loaded:', reactFlowInstance);\n  reactFlowInstance.fitView();\n};\n\n\nconst App = () => {\n  const [elements, setElements] = useState(initialElements);\n  const onElementsRemove = (elementsToRemove) =>\n    setElements((els) => removeElements(elementsToRemove, els));\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\n\n  return (\n    <ReactFlow\n      elements={elements}\n      onElementsRemove={onElementsRemove}\n      onConnect={onConnect}\n      onLoad={onLoad}\n      snapToGrid={true}\n      snapGrid={[15, 15]}\n    >\n      <MiniMap\n        nodeStrokeColor={(n) => {\n          if (n.style?.background) return n.style.background;\n          if (n.type === 'input') return '#0041d0';\n          if (n.type === 'output') return '#ff0072';\n          if (n.type === 'default') return '#1a192b';\n\n          return '#eee';\n        }}\n        nodeColor={(n) => {\n          if (n.style?.background) return n.style.background;\n\n          return '#fff';\n        }}\n        nodeBorderRadius={2}\n      />\n      <Controls />\n      <Background color=\"#aaa\" gap={16} />\n    </ReactFlow>\n  );\n};\n\nexport default App;\n\n// const elements = [\n//   {\n//     id: '1',\n//     type: 'input',\n//     data: { label: 'Upload' },\n//     position: { x: 250, y: 25 },\n//   },\n//   // default node\n//   {\n//     id: '2',\n//     // you can also pass a React component as a label\n//     data: { label: <div>Default Node</div> },\n//     position: { x: 100, y: 125 },\n//   },\n//   {\n//     id: '3',\n//     type: 'output', // output node\n//     data: { label: 'Output Node' },\n//     position: { x: 250, y: 250 },\n//   },\n//   // animated edge\n//   { id: 'e1-2', source: '1', target: '2', animated: true },\n//   { id: 'e2-3', source: '2', target: '3' },\n// ];\n\n\n// function App() {\n//   return (\n//     <div style={{ height: 1000 }}>\n//         <ReactFlow elements={elements} />\n//     </div>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}